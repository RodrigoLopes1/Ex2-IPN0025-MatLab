clear all
tabela = readtable("TabelaMatLabEx1.xlsx"); %extração dos dados ta tabela incial 

previsao = zeros(6 , 3); %definição da tabela de resultados
M_eqReta = zeros(6, 3);
B_eqReta = zeros(6, 3);

for i = 2:1:6
    
    %i = 3; %etapa
    
    %encontrar a equação da reta ------------------
    %set dos valores gráficos retiradas da tabela
    x = [tabela.BC3(i-1) tabela.BC3(i)];
    y1 = [tabela.M1(i-1) tabela.M1(i)];
    y2 = [tabela.M2(i-1) tabela.M2(i)];
    y9 = [tabela.M9(i-1) tabela.M9(i)];
    
    %calculo do coenficiente da reta 
    m1 = (y1(2) - y1(1))/(x(2) - x(1));
    m2 = (y2(2) - y2(1))/(x(2) - x(1));
    m9 = (y9(2) - y9(1))/(x(2) - x(1));
    
    %calculo do fator b da reta
    b1 = y1(1) - (m1*x(1));
    b2 = y2(1) - (m2*x(1));
    b9 = y9(1) - (m9*x(1));
    
    %valor de x para y = 0 encontrado a partir da equação da reta
    xf1 = (0-b1)/m1;
    xf2 = (0-b2)/m2;
    xf9 = (0-b9)/m9;
    
    %valor aplicado ao coeficiente de segurança
    coef = 2/3;
    C1 = xf1 * coef;
    C2 = xf2 * coef;
    C9 = xf9 * coef;
    
    %C9 = valor_em_aula; %adaptação do valor de C9 pelo usado em aula
    
    Cs = [C1 C2 C9];
    %proxima_posicao = min(Cs); %encontra o valor mais conservativo para a proxima barra 
    
    %tabela.BC3(i+1) = proxima_posicao;
    
    previsao(i, 1) = C1;
    previsao(i, 2) = C2;
    previsao(i, 3) = C9;
    M_eqReta(i, 1) = m1;
    M_eqReta(i, 2) = m2;
    M_eqReta(i, 3) = m9;
    B_eqReta(i, 1) = b1;
    B_eqReta(i, 2) = b2;
    B_eqReta(i, 3) = b9;
end


xg = 0:0.1:100; % grade de x
for i = 2:1:6
    figure(3);
    y = ((M_eqReta(i, 3).*xg)+B_eqReta(i, 3));
    plot(xg,y);
    hold on;
end

title("Gráfico da interpolação dos valores referentes a C9");
xlabel ("Porcentagem de barra");
ylabel("1/M")
grid on;
axis([0 100 0 2]);
%saveas(figure(3), './figuras/itemi3.png', 'png')
